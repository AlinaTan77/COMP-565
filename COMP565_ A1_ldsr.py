# -*- coding: utf-8 -*-
"""COMP565_A1_ldsr.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Lxjn0eiERWk8AUlq9HyU8SPDlczPEklh

# A1 Question 2

Assume there is no population stratification in this dataset
Both phenotype and genotype were standardized.
--> Estimate the heritability of the phenotype

1.   List marginal statistics for M = 4268 SNPs
2.   List M × M LD matrix **R**
"""

import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression

from google.colab import drive
drive.mount('/content/gdrive')

"""Load dataset (csv files)"""

beta_marginal = pd.read_csv("/content/gdrive/My Drive/COMP 565/A1/beta_marginal.csv")
LD= pd.read_csv("/content/gdrive/My Drive/COMP 565/A1/LD.csv")

#beta_marginal
# 4268 rows × 2 columns[Unnamed: 0][V1]

#LD
#4268 rows × 4269 columns

# extract the marginal statistics to numpy arrays
beta_marginal_np = beta_marginal["V1"].to_numpy()

# convert the LD to numpy arrays
LD_np = LD.to_numpy()
# we only need the LD score, so we delete first columns
LD_score_np = np.delete(LD_np,0,1)

#print(LD_score_np.shape) = (4268, 4268)

#Estimate the heritability by the LD score regression
#regression coefficient (h^2) corresponds to the heritability

N = 1000 #individuals
M = 4268 #SNPs

# calculated value(x_train) = E[x^2] 
# true value(y_train) = N*beta_marginal_statistics 
x_train = np.dot(N/M, (np.sum(np.square(LD_score_np), axis=0))).reshape((-1, 1)) 
y_train = np.dot(N, (np.square(beta_marginal_np))) -1

model = LinearRegression(fit_intercept=False).fit(x_train, y_train, )  #we used centered data
print("Estimated heritability is: ", model.coef_)  # coefficient corresponds to the heritability